<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.4">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2018-11-20T10:44:06+08:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">JT.H 6-min/km</title><subtitle>No idea what I am going to do here. Maybe I will record some technology/sports that I'm interested on. :&gt;</subtitle><entry><title type="html">Install embedded rootfs on USB disk</title><link href="http://localhost:4000/linux/2018/11/19/embedded-rootfs.html" rel="alternate" type="text/html" title="Install embedded rootfs on USB disk" /><published>2018-11-19T16:46:10+08:00</published><updated>2018-11-19T16:46:10+08:00</updated><id>http://localhost:4000/linux/2018/11/19/embedded-rootfs</id><content type="html" xml:base="http://localhost:4000/linux/2018/11/19/embedded-rootfs.html">&lt;h2 id=&quot;usb-disk-preparation&quot;&gt;USB disk preparation&lt;/h2&gt;
&lt;p&gt;Prepare a USB disk and format to EXT filesystem on host PC.
Before formating/partitioning USB disk, you need to double check which /dev/sd? is detected.
In my case, my host PC is using ubuntu 16.04 and inserted USB is detected on /dev/sda.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;fdisk /dev/sdb
mkfs.ext4 /dev/sda&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;rootfs-generation&quot;&gt;Rootfs generation&lt;/h2&gt;
&lt;p&gt;Use debootstrap to make a debian rootfs, check[1]. Another good reference is on github[2]. 
To be noticed that &lt;code class=&quot;highlighter-rouge&quot;&gt;armel&lt;/code&gt; should be general for arm platform and &lt;code class=&quot;highlighter-rouge&quot;&gt;armhf&lt;/code&gt; is advanced and also supported. 
(but you need to check your target board with FPU. See debian website)&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; ./make-rootfs.sh armel&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;After you excute the script, rootfs will be put on build folder.
Then, copy generated rootfs folder to USB disk. (In my case, it was on media/jt/xxxx/)&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;sudo cp&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-rvf&lt;/span&gt; debian-rootfs/build/armel/armel-rootfs-2018xxxx /media/jt/xxxx/&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;generated-a-chroot-script&quot;&gt;Generated a chroot script&lt;/h2&gt;
&lt;p&gt;Prepared a &lt;code class=&quot;highlighter-rouge&quot;&gt;chroot&lt;/code&gt; script (chrootfs.sh) and stored into USB disk.
Example as below:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/busybox sh&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;chroot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/mnt/jail/armel-rootfs-2018xxxx&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;bin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/bin/bash&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;usb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/dev/sda&quot;&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;bb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/bin/busybox&quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;x&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;x&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
        &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;bin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$bb&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;mkdir&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;chroot&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/dev&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$bb&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;mkdir&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;chroot&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/proc&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$bb&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;mkdir&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;chroot&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/sys&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$bb&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;mkdir&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;chroot&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/bcmfs&quot;&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$bb&lt;/span&gt; mount | &lt;span class=&quot;nv&quot;&gt;$bb&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-q&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;chroot&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/dev&quot;&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$bb&lt;/span&gt; mount &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;bind&lt;/span&gt; /dev     &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;chroot&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/dev&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$bb&lt;/span&gt; mount | &lt;span class=&quot;nv&quot;&gt;$bb&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-q&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;chroot&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/dev/pts&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$bb&lt;/span&gt; mount &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;bind&lt;/span&gt; /dev/pts &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;chroot&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/dev/pts&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$bb&lt;/span&gt; mount | &lt;span class=&quot;nv&quot;&gt;$bb&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-q&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;chroot&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/proc&quot;&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$bb&lt;/span&gt; mount &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;bind&lt;/span&gt; /proc    &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;chroot&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/proc&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$bb&lt;/span&gt; mount | &lt;span class=&quot;nv&quot;&gt;$bb&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-q&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;chroot&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/sys&quot;&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$bb&lt;/span&gt; mount &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;bind&lt;/span&gt; /sys     &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;chroot&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/sys&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$bb&lt;/span&gt; mount | &lt;span class=&quot;nv&quot;&gt;$bb&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-q&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;chroot&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/bcmfs&quot;&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$bb&lt;/span&gt; mount &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;bind&lt;/span&gt; /        &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;chroot&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/bcmfs&quot;&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/usr/local/bin:/usr/local/sbin:/usr/sbin:/sbin:/usr/bin:/bin&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;HOME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/root&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;USER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;root&quot;&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$bb&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;chroot&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$chroot&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$bin&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;chroot-on-target-board&quot;&gt;Chroot on target board&lt;/h2&gt;
&lt;p&gt;Install USB disk on target board and execute chroot scripts&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;mount /dev/sda /mnt/jail/&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;./chrootfs.sh&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;install-utility-via-apt-package&quot;&gt;Install utility via apt package&lt;/h2&gt;
&lt;p&gt;Below is a case for example to use &lt;code class=&quot;highlighter-rouge&quot;&gt;apt-get&lt;/code&gt; and install &lt;code class=&quot;highlighter-rouge&quot;&gt;python&lt;/code&gt;.
To be noticed that you need to check your networking before using apt package. 
The basic is to check your route gateway and ping 8.8.8.8 for testing.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;apt-get update
apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;python&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;reference&quot;&gt;Reference&lt;/h2&gt;
&lt;p&gt;[1] https://wiki.debian.org/EmDebian/CrossDebootstrap&lt;/p&gt;

&lt;p&gt;[2] https://github.com/jubinson/debian-rootfs&lt;/p&gt;</content><author><name></name></author><summary type="html">USB disk preparation Prepare a USB disk and format to EXT filesystem on host PC. Before formating/partitioning USB disk, you need to double check which /dev/sd? is detected. In my case, my host PC is using ubuntu 16.04 and inserted USB is detected on /dev/sda. fdisk /dev/sdb mkfs.ext4 /dev/sda</summary></entry><entry><title type="html">Install Python and OpenCV on windows</title><link href="http://localhost:4000/git/2018/11/01/Python-opencv-set-up.html" rel="alternate" type="text/html" title="Install Python and OpenCV on windows" /><published>2018-11-01T12:23:10+08:00</published><updated>2018-11-01T12:23:10+08:00</updated><id>http://localhost:4000/git/2018/11/01/Python-opencv-set-up</id><content type="html" xml:base="http://localhost:4000/git/2018/11/01/Python-opencv-set-up.html">&lt;p&gt;My friend was asking me how to set up python environment since he had tried for a while but failed on his windows based enviroment.
I have few experience though and all of the experence is based on Linux system. All I can recall are about the embedded porting for SAMBA application 
in which some codes relates to python and some material for cross-toolchain that scripts in python. So I spend some time to reference open course[1]&lt;/p&gt;

&lt;p&gt;Here I note the steps for someone who needs as reference as well as for my friend.&lt;/p&gt;

&lt;h2 id=&quot;install-anaconda&quot;&gt;Install Anaconda&lt;/h2&gt;
&lt;p&gt;Anaconda is a good start for rookie (like me) to avoid some conflictions on package installations. We can find the latest one on https://www.anaconda.com/download/ and just clicking “next step” until installation sucessfully.After installation, we can open Anaconda Prompt with admin user.&lt;/p&gt;

&lt;p&gt;Check the conda version&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;conda &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# conda 4.5.11&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Under Anaconda Prompt, create an enviornment which is based on python 3.5.2.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;conda create &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; opencv_py352_demo &lt;span class=&quot;nv&quot;&gt;python&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;3.5.2&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check one of env you created, naming opencv_py352_demo&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;conda info &lt;span class=&quot;nt&quot;&gt;--envs&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# conda environments:&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
base                     C:&lt;span class=&quot;se&quot;&gt;\P&lt;/span&gt;rogramData&lt;span class=&quot;se&quot;&gt;\A&lt;/span&gt;naconda3
opencv_py352_demo     &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;  C:&lt;span class=&quot;se&quot;&gt;\P&lt;/span&gt;rogramData&lt;span class=&quot;se&quot;&gt;\A&lt;/span&gt;naconda3&lt;span class=&quot;se&quot;&gt;\e&lt;/span&gt;nvs&lt;span class=&quot;se&quot;&gt;\o&lt;/span&gt;pencv_py352_demo&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;If you want to check all envs. and remove some of them, you can type:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;conda remove &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; myenv &lt;span class=&quot;nt&quot;&gt;--all&lt;/span&gt;
conda &lt;span class=&quot;nb&quot;&gt;env &lt;/span&gt;remove &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; myenv&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;install-opencv&quot;&gt;Install OpenCV&lt;/h2&gt;

&lt;p&gt;OpenCV, Spyder, SciPy and matplotlib&lt;/p&gt;

&lt;p&gt;Spyder editor is strong IDE tools, and looks likes MATLAB env. If you are going to learn OpenCV, SciPy (pronounced “Sigh Pie”) and matplotlib are good combinations to do simulations on mathematics, science, engineering applications.&lt;/p&gt;

&lt;p&gt;Install OpenCV&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;conda &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; https://conda.anaconda.org/menpo opencv3&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Install spyder&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;conda &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;spyder&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Install matplotlib&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;conda &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;matplotlib&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Open spyder IDE&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;spyder&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Run an example on my environment [2]
&lt;img src=&quot;/media/images/spyder_python.png&quot; alt=&quot;pic01&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;reference&quot;&gt;Reference&lt;/h2&gt;
&lt;p&gt;[1] http://cs231n.github.io/python-numpy-tutorial/&lt;/p&gt;

&lt;p&gt;[2] https://opencv-python-tutroals.readthedocs.io/en/latest/py_tutorials/py_imgproc/py_gradients/py_gradients.html#gradients&lt;/p&gt;</content><author><name></name></author><summary type="html">My friend was asking me how to set up python environment since he had tried for a while but failed on his windows based enviroment. I have few experience though and all of the experence is based on Linux system. All I can recall are about the embedded porting for SAMBA application in which some codes relates to python and some material for cross-toolchain that scripts in python. So I spend some time to reference open course[1]</summary></entry><entry><title type="html">The multiple ssh keys for bitbucket and github</title><link href="http://localhost:4000/git/2018/10/29/SSH-KEYS-GIT.html" rel="alternate" type="text/html" title="The multiple ssh keys for bitbucket and github" /><published>2018-10-29T16:45:10+08:00</published><updated>2018-10-29T16:45:10+08:00</updated><id>http://localhost:4000/git/2018/10/29/SSH-KEYS-GIT</id><content type="html" xml:base="http://localhost:4000/git/2018/10/29/SSH-KEYS-GIT.html">&lt;p&gt;Create two keys for bitbucket and github&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;mkdir &lt;/span&gt;sshkey
ssh-keygen &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; rsa &lt;span class=&quot;nt&quot;&gt;-C&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;company&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;company&quot;&lt;/span&gt;
ssh-keygen &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; rsa &lt;span class=&quot;nt&quot;&gt;-C&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;JTNOMONEY&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;JTNOMONEY&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Clear cached key&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;ssh-add &lt;span class=&quot;nt&quot;&gt;-D&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Add two keys and check afterwards&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;ssh-add ~/sshkey/company
ssh-add ~/sshkey/JTNOMONEY
ssh-add &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;If &lt;code class=&quot;highlighter-rouge&quot;&gt;ssh-add&lt;/code&gt; is not working, try&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;eval&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;ssh-agent&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Add a config files ./ssh/config&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;c&quot;&gt;#--Company's bitbucket&lt;/span&gt;
Host bitbucket.company.com.tw
  HostName bitbucket.company.com.tw
  IdentityFile ~/.ssh/company

&lt;span class=&quot;c&quot;&gt;#--JTNOMONEY github&lt;/span&gt;
Host github.com
  HostName github.com
  IdentityFile ~/.ssh/JTNOMONEY&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Set an example of default name/email using &lt;code class=&quot;highlighter-rouge&quot;&gt;git config&lt;/code&gt; and check settings&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;c&quot;&gt;#--Company's bitbucket&lt;/span&gt;
git config &lt;span class=&quot;nt&quot;&gt;--global&lt;/span&gt; user.name &lt;span class=&quot;s2&quot;&gt;&quot;company_name&quot;&lt;/span&gt;
git config &lt;span class=&quot;nt&quot;&gt;--global&lt;/span&gt; user.email &lt;span class=&quot;s2&quot;&gt;&quot;company_name@company.com&quot;&lt;/span&gt;
git config &lt;span class=&quot;nt&quot;&gt;--list&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Add your ssh public keys on github/bitbucket, then test github account for example:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;git clone git@github.com:JTNOMONEY/jtnomoney.github.io.git
jtnomoney.github.io&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git config user.name &lt;span class=&quot;s2&quot;&gt;&quot;jtnomoney&quot;&lt;/span&gt;
jtnomoney.github.io&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git config user.email &lt;span class=&quot;s2&quot;&gt;&quot;jtnomoney@gmail.com&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name></name></author><summary type="html">Create two keys for bitbucket and github mkdir sshkey ssh-keygen -t rsa -C &quot;company&quot; -f &quot;company&quot; ssh-keygen -t rsa -C &quot;JTNOMONEY&quot; -f &quot;JTNOMONEY&quot;</summary></entry></feed>